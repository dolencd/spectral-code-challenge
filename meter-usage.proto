syntax = "proto3";
package meter_usage;
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service MeterUsageService {
    rpc GetSensorData (google.protobuf.Empty) returns (MeterUsage);
}

message EmptyRequest {}

message MeterUsage {
    repeated MeterUsageDataPoint meter_usage = 1;
}

message MeterUsageDataPoint {
    float value = 1;
    // This timestamp was probably the one thing that caused the most problems of all, needing special encoding and decoding at either end. I'm sure there's a better way of doing it (in Rust), but I haven't found it yet. Still, I got it working in the end!
    google.protobuf.Timestamp time = 2;
}

